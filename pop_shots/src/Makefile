all: game

./binary/stick.o: include/stick.h source/stick.cc
	@echo "stick.o"
	@g++ -O3 -c -Wall source/stick.cc -o ./binary/stick.o `sdl-config --cflags`

./binary/worm.o: include/worm.h source/worm.cc
	@echo "worm.o"
	@g++ -O3 -c -Wall source/worm.cc -o ./binary/worm.o `sdl-config --cflags`

./binary/grenade.o: include/grenade.h source/grenade.cc
	@echo "grenade.o"
	@g++ -O3 -c -Wall source/grenade.cc -o ./binary/grenade.o `sdl-config --cflags`

./binary/shell.o: include/shell.h source/shell.cc
	@echo "shell.o"
	@g++ -O3 -c -Wall source/shell.cc -o ./binary/shell.o `sdl-config --cflags`

./binary/sight.o: include/sight.h source/sight.cc
	@echo "sight.o"
	@g++ -O3 -c -Wall source/sight.cc -o ./binary/sight.o `sdl-config --cflags`

./binary/window.o: include/window.h source/window.cc
	@echo "window.o"
	@g++ -O3 -c -Wall source/window.cc -o ./binary/window.o `sdl-config --cflags`

./binary/arsenal.o: include/arsenal.h source/arsenal.cc
	@echo "arsenal.o"
	@g++ -O3 -c -Wall source/arsenal.cc -o ./binary/arsenal.o `sdl-config --cflags`

./binary/windowsystem.o: include/windowsystem.h source/windowsystem.cc
	@echo "windowsystem.o"
	@g++ -O3 -c -Wall source/windowsystem.cc -o ./binary/windowsystem.o `sdl-config --cflags`

./binary/text.o: include/text.h source/text.cc
	@echo "text.o"
	@g++ -O3 -c -Wall source/text.cc -o ./binary/text.o `sdl-config --cflags`

./binary/array2d.o: include/array2d.h source/array2d.cc
	@echo "array2d.o"
	@g++ -O3 -c -Wall source/array2d.cc -o ./binary/array2d.o `sdl-config --cflags`

./binary/wind.o: include/wind.h source/wind.cc
	@echo "wind.o"
	@g++ -O3 -c -Wall source/wind.cc -o ./binary/wind.o `sdl-config --cflags`

./binary/team.o: include/team.h source/team.cc
	@echo "team.o"
	@g++ -O3 -c -Wall source/team.cc -o ./binary/team.o `sdl-config --cflags`

./binary/teammanager.o: include/teammanager.h source/teammanager.cc
	@echo "teammanager.o"
	@g++ -O3 -c -Wall source/teammanager.cc -o ./binary/teammanager.o `sdl-config --cflags`

./binary/fontmanager.o: include/fontmanager.h source/fontmanager.cc
	@echo "fontmanager.o"
	@g++ -O3 -c -Wall source/fontmanager.cc -o ./binary/fontmanager.o `sdl-config --cflags`

./binary/explosionmanager.o: include/explosionmanager.h source/explosionmanager.cc
	@echo "explosionmanager.o"
	@g++ -O3 -c -Wall source/explosionmanager.cc -o ./binary/explosionmanager.o `sdl-config --cflags`

./binary/collision.o: include/collision.h source/collision.cc
	@echo "collision.o"
	@g++ -O3 -c -Wall source/collision.cc -o ./binary/collision.o `sdl-config --cflags`

./binary/point2d.o: include/point2d.h source/point2d.cc
	@echo "2dpoint.o"
	@g++ -O3 -c -Wall source/point2d.cc -o ./binary/point2d.o `sdl-config --cflags`

./binary/velocity.o: include/velocity.h source/velocity.cc
	@echo "velocity.o"
	@g++ -O3 -c -Wall source/velocity.cc -o ./binary/velocity.o `sdl-config --cflags`

./binary/physicalobject.o: include/physicalobject.h source/physicalobject.cc
	@echo "physicalobject.o"
	@g++ -O3 -c -Wall source/physicalobject.cc -o ./binary/physicalobject.o `sdl-config --cflags`

./binary/physics.o: include/physics.h source/physics.cc
	@echo "physics.o"
	@g++ -O3 -c -Wall source/physics.cc -o ./binary/physics.o `sdl-config --cflags`

./binary/quadtree.o: include/quadtree.h source/quadtree.cc
	@echo "quadtree.o"
	@g++ -O3 -c -Wall source/quadtree.cc -o ./binary/quadtree.o `sdl-config --cflags`

./binary/logic.o: include/logic.h source/logic.cc
	@echo "logic.o"
	@g++ -O3 -c -Wall source/logic.cc -o ./binary/logic.o `sdl-config --cflags`

./binary/collisionmanager.o: include/collisionmanager.h source/collisionmanager.cc
	@echo "collisionmanager.o"
	@g++ -O3 -c -Wall source/collisionmanager.cc -o ./binary/collisionmanager.o `sdl-config --cflags`

./binary/texturemanager.o: include/texturemanager.h source/texturemanager.cc
	@echo "texturemanager.o"
	@g++ -O3 -c -Wall source/texturemanager.cc -o ./binary/texturemanager.o `sdl-config --cflags`

./binary/objectmanager.o: include/objectmanager.h source/objectmanager.cc
	@echo "objectmanager.o"
	@g++ -O3 -c -Wall source/objectmanager.cc -o ./binary/objectmanager.o `sdl-config --cflags`

./binary/engine.o: include/engine.h source/engine.cc
	@echo "engine.o"
	@g++ -O3 -c -Wall source/engine.cc -o ./binary/engine.o `sdl-config --cflags`
	
./binary/drawingengine.o: include/drawingengine.h source/drawingengine.cc
	@echo "drawingengine.o"
	@g++ -O3 -c -Wall source/drawingengine.cc -o ./binary/drawingengine.o `sdl-config --cflags`
	
./binary/input.o: include/input.h source/input.cc
	@echo "input.o"
	@g++ -O3 -c -Wall source/input.cc -o ./binary/input.o `sdl-config --cflags`

./binary/funcs.o: include/funcs.h source/funcs.cc
	@echo "funcs.o"
	@g++ -O3 -c -Wall source/funcs.cc -o ./binary/funcs.o `sdl-config --cflags`

./binary/object.o: include/object.h source/object.cc
	@echo "object.o"
	@g++ -O3 -c -Wall source/object.cc -o ./binary/object.o `sdl-config --cflags`

./binary/animation.o: include/animation.h source/animation.cc
	@echo "animation.o"
	@g++ -O3 -c -Wall source/animation.cc -o ./binary/animation.o `sdl-config --cflags`
	
./binary/texture.o: include/texture.h source/texture.cc
	@echo "texture.o"
	@g++ -O3 -c -Wall source/texture.cc -o ./binary/texture.o `sdl-config --cflags`

./binary/level.o: include/level.h source/level.cc
	@echo "level.o"
	@g++ -O3 -c -Wall source/level.cc -o ./binary/level.o `sdl-config --cflags`
	
./binary/camera.o: include/camera.h source/camera.cc
	@echo "camera.o"
	@g++ -O3 -c -Wall source/camera.cc -o ./binary/camera.o `sdl-config --cflags`
	
./binary/canvas.o: include/canvas.h source/canvas.cc
	@echo "canvas.o"
	@g++ -O3 -c -Wall source/canvas.cc -o ./binary/canvas.o `sdl-config --cflags`
	
./binary/core.o: include/core.h source/core.cc
	@echo "core.o"
	@g++ -O3 -c -Wall source/core.cc -o ./binary/core.o `sdl-config --cflags`
	
./binary/video.o: include/video.h source/video.cc
	@echo "video.o"
	@g++ -O3 -c -Wall source/video.cc -o ./binary/video.o `sdl-config --cflags`

./binary/main.o: source/main.cc include/engine.h
	@echo "main.o"
	@g++ -O3 -c -Wall source/main.cc -o ./binary/main.o `sdl-config --cflags`

game: ./binary/main.o ./binary/engine.o ./binary/grenade.o ./binary/arsenal.o ./binary/teammanager.o ./binary/team.o ./binary/sight.o ./binary/windowsystem.o ./binary/window.o ./binary/text.o ./binary/video.o ./binary/wind.o ./binary/fontmanager.o ./binary/core.o ./binary/input.o ./binary/canvas.o ./binary/camera.o ./binary/level.o ./binary/drawingengine.o ./binary/texture.o ./binary/animation.o ./binary/funcs.o ./binary/object.o ./binary/objectmanager.o ./binary/logic.o ./binary/texturemanager.o ./binary/collisionmanager.o ./binary/explosionmanager.o ./binary/quadtree.o ./binary/physics.o ./binary/physicalobject.o ./binary/velocity.o ./binary/point2d.o ./binary/array2d.o ./binary/collision.o ./binary/shell.o ./binary/worm.o ./binary/stick.o
	@echo "game"
	@g++ -Wall -O3 ./binary/*.o -o game `sdl-config --cflags --libs` -lSDL_image -lSDL_ttf

clean: 
	@rm -f -v ./binary/*.o ./binary/*~  game

run: game
	@clear
	@echo "--------------------BEGIN--------------------\n"
	@./game
	@echo "\n---------------------END---------------------"


#make format style=(ansi/java)

ifdef style     
format: 
	@clear
	@astyle --style=$(style) -T4 -n -E --recursive *.cc *.h 
else
format: 
	@clear
	@astyle --style=java -T4 -n -E --recursive *.cc *.h 
endif
